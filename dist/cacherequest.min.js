var CacheRequest=function(){var CacheRequestProto=function(){function send(options){__prepareVariables(options);var valid=__isValid();valid?__callCachedCallback():__doRequest(),self.d.promise()}function __prepareVariables(options){self.opt=options,self.d=new $.Deferred,__createHash(),__getStored()}function __createHash(){self.hash=self.opt.url+""+(self.opt.data||"")+(self.opt.method||"-ANY")}function __getStored(){self.stored=localStorage.getItem(self.hash),self.stored=JSON.parse(self.stored)||null}function __isValid(){if(!self.stored)return!1;var to=self.stored[self.storageKeys.timeout],lc=self.stored[self.storageKeys.lastcall];return Date.now()-lc<to}function __callCachedCallback(){self.opt.hasOwnProperty("success")?self.opt.success.call(self.opt.context,null,"CACHED",self.stored[self.storageKeys.response]):self.opt.hasOwnProperty("complete")&&self.opt.complete(self.opt.context,"CACHED",self.stored[self.storageKeys.response]),self.d.resolve()}function __doRequest(){self.originalSettings={s:self.opt.success,f:self.opt.error,c:self.opt.complete,ctx:self.opt.context},self.opt.success=__successCallback,self.opt.error=__errorCallback,self.opt.complete=__completeCallback,self.opt.context=self,$.ajax(self.opt)}function __successCallback(data,status,res){__cacheRequest(res),self.originalSettings.s?self.originalSettings.s.call(self.originalSettings.ctx,data,status,res):self.originalSettings.c&&self.originalSettings.c.call(self.originalSettings.ctx,res,status),self.d.resolve()}function __errorCallback(res,status,err){self.originalSettings.e&&self.originalSettings.call(self.originalSettings.ctx,res,status,err),self.d.resolve()}function __completeCallback(res,status){(0===res.status||"error"===status)&&(res=self.opt.useOldIfError&&self.stored?self.stored[self.storageKeys.response]:null),self.originalSettings.c?self.originalSettings.c.call(self.originalSettings.ctx,res,status):console.log('No "complete" callback, no connection and no cache available (or you don\'t want it).'),self.d.resolve()}function __cacheRequest(res){var data={};data[self.storageKeys.timeout]=self.opt.cacheTimeout||self.defaultTimeout,data[self.storageKeys.lastcall]=Date.now(),data[self.storageKeys.response]=res,localStorage.setItem(self.hash,JSON.stringify(data))}var self=this;return self.storageKeys={timeout:"TIMEOUT",lastcall:"LASTCALL",response:"RESPONSE"},self.defaultTimeout=3e5,{send:send}};return{send:function(options){var cr=new CacheRequestProto;return cr.send(options)}}}();